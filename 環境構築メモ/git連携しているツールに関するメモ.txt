Gitignoreについて

  Gitの機能の一つで
	アプリ内の公開すべきでは無いファイル
	(マスターキーファイル等)を記述する
	ファイル。

	このファイルが存在する場合、gitでプッシュすると
	指定したファイルを除外した状態(追跡からはずす)のGit管理しているファイル群がリポジトリに追加される。
  この機能はフレームワークの機能ではなくGitの機能であり、
  また、記述方法によってはGitの管理が面倒になることがあるので操作方法を参照すること。(ブックマーク)


	このファイル自体はアプリをビルドするフレームワークには
	元々存在しない場合がある。(Railsには隠しファイルとして自動生成されている)

	gitignoreが無いと公開すべきでは無いファイルを一から生成、設定しなくてはならないため面倒を避けるための必須のファイルらしい。


Gitbucketについて

  ソースコードを保存してくれるWebサイト。
  Gihubとにている。

	Github:
		料金: プライベートリポジトリ利用は有料(後に無料化: 2019/ 01~)
			Githubにプッシュしたリポジトリ: 全て公開される。

	Gitbucket:
		料金: free
			Gitbucketにプッシュしたリポジトリ: 非公開にできる。

  * ソースコードを誰かに見られたくない場合はGitbucketが良い。
  * Githubで良いのでは？
  * 公開したくないソースコードはGit連携サービスにそもそも公開しなければよい。
	* ローカルにもGitで管理したリポジトリはあるし、
  * 他のサービスで保存しなくても復元は可能。

	追記: 2019/1月から非公開レポジトリも無料になった！
		Gitbucketを利用しなくてもよくなった

  * 別の話題になるが、実際にチュートリアルを行う際、
  * マスターへのプッシュの行為(リモートリポジトリに保存)は出来上がった時の一度しか行わないようにする？
  * リモートへプッシュしないでローカルで開発しても、
  * ローカルのリポジトリに対してGitコマンド(コミット、ブランチなど)を使ってGit操作の勉強にはなるので
  * アップロードせずにローカル内で完結してもよい。
  Githubが問題なく使えるのでTutorial通りにやってみる。

  ☆コマンドラインのGitの操作で他のWebサービスと通信する際は、
  ssh通信を忘れないようにすること。

